There are 3 types of interface

Consumer<T> 	It represents an operation that accepts a single argument and returns no result.
Function<T,R> 	It represents a function that accepts one argument and returns a result.
Predicate<T> 	It represents a predicate (boolean-valued function) of one argument.

BiConsumer<T,U> 	It represents an operation that accepts two input arguments and returns no result.
BiFunction<T,U,R> 	It represents a function that accepts two arguments and returns a a result.
BiPredicate<T,U> 	It represents a predicate (boolean-valued function) of two arguments.

Filter -> takes the predicate as input and filter the input
Map -> takes the function as input returns the object - Example Employee object